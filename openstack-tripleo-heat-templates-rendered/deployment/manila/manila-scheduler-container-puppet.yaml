heat_template_version: rocky

description: >
  OpenStack containerized Manila Scheduler service

parameters:
  ContainerManilaSchedulerImage:
    description: image
    type: string
  ContainerManilaConfigImage:
    description: The container image to use for the manila config_volume
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  MonitoringSubscriptionManilaScheduler:
    default: 'overcloud-manila-scheduler'
    type: string

resources:

  ContainersCommon:
    type: ../containers-common.yaml

  MySQLClient:
    type: ../../deployment/database/mysql-client.yaml

  ManilaBase:
    type: ./manila-base.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}

outputs:
  role_data:
    description: Role data for the Manila Scheduler role.
    value:
      service_name: manila_scheduler
      monitoring_subscription: {get_param: MonitoringSubscriptionManilaScheduler}
      config_settings: {get_attr: [ManilaBase, role_data, config_settings]}
      service_config_settings: {get_attr: [ManilaBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS #
      puppet_config:
        config_volume: manila
        puppet_tags: manila_config,manila_scheduler_paste_ini
        step_config:
          list_join:
            - "\n"
            - - "include ::tripleo::profile::base::manila::scheduler"
              - {get_attr: [MySQLClient, role_data, step_config]}
        config_image: {get_param: ContainerManilaConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/manila_scheduler.json:
          command: /usr/bin/manila-scheduler --config-file /usr/share/manila/manila-dist.conf --config-file /etc/manila/manila.conf
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /var/log/manila
              owner: manila:manila
              recurse: true
      docker_config:
        step_4:
          manila_scheduler:
            image: {get_param: ContainerManilaSchedulerImage}
            net: host
            restart: always
            healthcheck: {get_attr: [ContainersCommon, healthcheck_rpc_port]}
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/manila_scheduler.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/manila:/var/lib/kolla/config_files/src:ro
                  - /var/log/containers/manila:/var/log/manila:z
            environment:
              KOLLA_CONFIG_STRATEGY: COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent directories
          file:
            path: "{{ item.path }}"
            state: directory
            setype: "{{ item.setype }}"
            mode: "{{ item.mode }}"
          with_items:
            - { 'path': /var/log/containers/manila, 'setype': svirt_sandbox_file_t, 'mode': '0750' }
        - name: enable virt_sandbox_use_netlink for healthcheck
          seboolean:
            name: virt_sandbox_use_netlink
            persistent: yes
            state: yes
      upgrade_tasks: []
      fast_forward_upgrade_tasks:
        - name: Check if manila_scheduler is deployed
          command: systemctl is-enabled --quiet openstack-manila-scheduler
          failed_when: false
          register: manila_scheduler_enabled_result
          when:
            - step|int == 0
            - release == 'rocky'
        - name: Set fact manila_scheduler_enabled
          set_fact:
            manila_scheduler_enabled: "{{ manila_scheduler_enabled_result.rc == 0 }}"
          when:
            - step|int == 0
            - release == 'rocky'
        - name: Stop openstack-manila-scheduler
          service: name=openstack-manila-scheduler state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'rocky'
            - manila_scheduler_enabled|bool
