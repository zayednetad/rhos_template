heat_template_version: rocky

description: >
  OpenStack Sahara service
parameters:
  ContainerSaharaEngineImage:
    description: image
    type: string
  ContainerSaharaConfigImage:
    description: The container image to use for the sahara config_volume
    type: string
  SaharaEngineLoggingSource:
    type: json
    default:
      tag: openstack.sahara.engine
      file: /var/log/containers/sahara/sahara-engine.log
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  MonitoringSubscriptionSaharaEngine:
    default: 'overcloud-sahara-engine'
    type: string
  EnableSahara:
    default: false
    description: Forcefully keep Sahara enabled on upgrade
    type: boolean

resources:

  ContainersCommon:
      type: ../containers-common.yaml

  MySQLClient:
    type: ../database/mysql-client.yaml

  SaharaBase:
    type: ./sahara-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Sahara Engine role.
    value:
      service_name: sahara_engine
      upgrade_tasks:
        when: step == '1'
        block:
          - name: set fact for EnableSahara
            set_fact:
              enable_sahara: {get_param: EnableSahara}
          - name: fail unless EnableSahara is enabled
            fail:
              msg: >
                Sahara has been removed from OSP 16 and should not be
                upgraded. If you intend to keep Sahara on OSP 16,
                knowing that it won't be supported, you should set the
                EnableSahara parameter to true.
            when: not enable_sahara
      monitoring_subscription: {get_param: MonitoringSubscriptionSaharaEngine}
      config_settings:
        map_merge:
          - get_attr: [SaharaBase, role_data, config_settings]
          - sahara::sync_db: false
      service_config_settings:
        rsyslog:
          tripleo_logging_sources_sahara_engine:
            - {get_param: SaharaEngineLoggingSource}
      # BEGIN DOCKER SETTINGS #
      puppet_config:
        config_volume: sahara
        puppet_tags: sahara_engine_paste_ini,sahara_cluster_template,sahara_config,sahara_node_group_template
        step_config:
          list_join:
            - "\n"
            - - include ::tripleo::profile::base::sahara::engine
              - {get_attr: [MySQLClient, role_data, step_config]}
        config_image: {get_param: ContainerSaharaConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/sahara-engine.json:
          command: /usr/bin/sahara-engine --config-file /etc/sahara/sahara.conf
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /var/lib/sahara
              owner: sahara:sahara
              recurse: true
            - path: /var/log/sahara
              owner: sahara:sahara
              recurse: true
      docker_config:
        step_4:
          sahara_engine:
            image: {get_param: ContainerSaharaEngineImage}
            net: host
            privileged: false
            restart: always
            healthcheck: {get_attr: [ContainersCommon, healthcheck_rpc_port]}
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/sahara-engine.json:/var/lib/kolla/config_files/config.json
                  - /var/lib/config-data/puppet-generated/sahara:/var/lib/kolla/config_files/src:ro
                  - /var/lib/sahara:/var/lib/sahara
                  - /var/log/containers/sahara:/var/log/sahara
            environment:
              KOLLA_CONFIG_STRATEGY: COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent directories
          file:
            path: "{{ item.path }}"
            state: directory
            setype: "{{ item.setype }}"
            mode: "{{ item.mode|default(omit) }}"
          with_items:
            - { 'path': /var/log/containers/sahara, 'setype': svirt_sandbox_file_t, 'mode': '0750' }
            - { 'path': /var/lib/sahara, 'setype': svirt_sandbox_file_t }
        - name: enable virt_sandbox_use_netlink for healthcheck
          seboolean:
            name: virt_sandbox_use_netlink
            persistent: yes
            state: yes
      fast_forward_upgrade_tasks:
        - when:
            - step|int == 0
            - release == 'rocky'
          block:
            - name: FFU check if openstack-sahara-engine is enabled
              command: systemctl is-enabled --quiet openstack-sahara-engine
              failed_when: false
              register: sahara_engine_enabled_result
            - name: Set fact sahara_engine_enabled
              set_fact:
                sahara_engine_enabled: "{{ sahara_engine_enabled_result.rc == 0 }}"
        - name: FFU stop and disable openstack-sahara-engine service
          when:
            - step|int == 1
            - release == 'rocky'
            - sahara_engine_enabled|bool
          service: name=openstack-sahara-engine state=stopped enabled=no
